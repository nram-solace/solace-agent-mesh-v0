# Configuration file for the SQL database agent that provides:
# - Natural language to SQL query conversion
# - Query execution against multiple database types (MySQL, PostgreSQL, SQLite)
# - Results in multiple formats (YAML, JSON, CSV, Markdown)

---
log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: logs/test-sql-agent.log

shared_config:
  - broker_config: &broker_connection
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}

flows:
  # Flow to handle action requests
  - name: test_sql_agent_action_request_processor
    components:
      # Input from a Solace broker
      - component_name: broker_input
        component_module: broker_input
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}agent_test_sql_agent_action_request
          broker_subscriptions:
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/actionRequest/*/*/test_sql_agent/>
              qos: 1

      # Custom component to process the action request
      - component_name: action_request_processor
        # path is completed at build time
        component_module: sam_sql_database.src.agents.sql_database.sql_database_agent_component
        component_config:
          llm_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-good/
          embedding_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/embedding-service/request/text/
          agent_name: test_sql_agent
          db_type: ${TEST_SQL_AGENT_DB_TYPE}
          host: ${TEST_SQL_AGENT_DB_HOST}
          port: ${TEST_SQL_AGENTSQL_DB_PORT}
          user: ${TEST_SQL_AGENT_DB_USER}
          password: ${TEST_SQL_AGENT_DB_PASSWORD}
          database: ${TEST_SQL_AGENT_DB_NAME}
          query_timeout: ${TEST_SQL_AGENT_QUERY_TIMEOUT, 30}
          database_purpose: ${TEST_SQL_AGENT_DB_PURPOSE}
          data_description: ${TEST_SQL_AGENT_DB_DESCRIPTION}
          auto_detect_schema: true
        broker_request_response:
          enabled: true
          broker_config: *broker_connection
          request_expiry_ms: 120000
          payload_encoding: utf-8
          payload_format: json
          response_topic_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1
          response_queue_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1
        component_input:
          source_expression: input.payload

      # Output to a Solace broker
      - component_name: broker_output
        component_module: broker_output
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          copy_user_properties: true
